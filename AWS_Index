How to read this file?

[AWS Service]
 - Key words or functionalities of the service
 - Notes on the service

AWS IAM
 - Authentication and Authorization
 - Users
 - Groups
 - Policies
 - Roles (when service needs to access service, we use roles not users, as here the service is trying to access but not user)

AWS EC2
 - Types of EC2 instances - memory intensive / CPU intensive / general instance etc. using as per the needs and requirement
 - Instance creations are at AD level
 - Adjust permissions of the ssh private key file 600
 - Login to instance using ssh keys and command like ssh -i <key_file> username@<ip> 

AWS VPC
 - subnet
 - private subnets and public subnets
 - Route Table
 - Gateway (1 VPC 1 Gateway)
 - Typical flow: Internet -> Gateway to Vpc -> load balancer in public subnet -> route table -> reach the private subnet where security group decides to pass / deny the request
 - NACL attached at subnet level and security groups attached at instance level
 - NAT Gateways : mask the private subnet ips with public ip and allows the egress from private subnet resources to internet

AWS Security Group
 - Security is the shared responsibility of AWS and customers
 - By default, security group is attached for every instance
 - In Default SG, For inbound -> deny everything (by default) , For outbound -> allow everything (except port 25 as it is mail server port) (by default)
 - We can change the allow and deny rules as per our needs

AWS NACL (Network Access Control List)
 - It operates at subnet level
 - In Security groups, only ALLOW is allowes
 - In NACLs, both ALLOW  and DENY is allowed

AWS S3
 - Highly scalable and available, durable
 - s3 buckets are global
 - cost effective
 - security

AWS CodeCommit
 - works well with non root user and also recommended by AWS
 - useful for git enterprise users, solves overhead of enterprise git servers maintainence
 - cons: less in features as compared to github , bitbucket

AWS CodePipeline
 - Alternative to Jenkins
 - https://github.com/rashuchatla/AWS_Infrastructure_Automation/blob/main/Screenshot%202023-11-25%20at%201.53.09%20AM.png
 - This service is useful when companies want to avoid managing jenkins or similar infrastructure on their own
 - cons: These pipelines are AWS specific and cannot be reused if we want to move to other cloud / hybrid cloud. whereas jenkins pipelines almost remain same
